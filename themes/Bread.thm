;################################################################################
;#                     This is a template theme for IdleBot                     #
;#   Instructions:                                                              #
;#     - Every line beginning with a ; is a comment, and will be ignored        #
;#     - Do not change the keys, only change the values. This will cause an     #
;#       issue, and render the theme unusable. If you have suggestions for      #
;#       customization options, open an issue on the github                     #
;################################################################################

;####################
;# General settings #
;####################
[general]

; This is what people will know your theme as, it will show up as this when a
; user executes the theme command. Make it unique.
title= bread

; This is optional. Allows the user to get a quick description of the theme.
desc= 

; This is optional. If you wish the bot to credit you for making this, enter
; what you wish to be called here.
author= Seka & The Artificer

; Currently unused, will potentially be used to facilitate updating themes
version= 2.0

; Currently unused, will potentially be used to facilitate updating themes
downloadlink=

;#################
;# Item settings #
;#################
[item]

; The currency symbol (or string) to use in the shop
symbol= $

; Change to false to make the symbol display at the end of the number
prefix= true

; This is the header for the category
headeritem= Increased production
headerupgrade= Increased bread value

; This shows up after the increment for example setting demomitem= /second
; could show "+0.1/second" in the shop
denomitem= /second
denomupgrade= /loaf

; For the following lines, add as many names for items as youd like.
; Excess names will not be used, but not having enough names will cause your
; theme to have issues. Leaving items blank will count as not having the
; item at all

; Server owners are in control of the quantity, prices and values of items
; These are simply the names of those items, in order of least valuable to
; most valuable.

; This first list is items that give you increased production
; Such as more bread per second
; Descriptions, will be shown underneath the items in itallics. Should be
; somewhat short
item1= Easy Bake Oven
descit1= Just a phase.

item2= Brick Oven
descit2= Technology straight from 29,000 BC.

item3= Gas Oven
descit3= Is that a leak I smell?

item4= Electric Oven
descit4= An Industrial size electric oven.

item5= Corner Bakery
descit5= Bakers included.

item6= Supermarket Bakery Department
descit6= Who knew they sold specific departments of stores?

item7= Farm 2.0
descit7= Includes everything you need to turn plants into bread.

item8= Wonderbread Plant
descit8= Wheat enters, bread leaves.

item9= Bread Cloning Facility
descit9= 1=2?

item10= Bread Country
descit10= Buy a small country, enslave the population, and replace GDP with GBP (Gross Bread Produced).

; This second list is items that increase the value of your product
; Such as the selling price of bread
upgrade1= Spices
descup1= "Made with all natural herbs and spices".

upgrade2= Gluten Free Wheat
descup2= For stupid hippies and people with celiac.

upgrade3= Extra Gluten Wheat
descup3= Convienient for people with hypercilia.

upgrade4= Genetically Modified Wheat
descup4= 300% more wheat-y!

upgrade5= French Employees
descup5= They use ancient secrets to roll your bread.

upgrade6= Yeast Spore Planes
descup6= Filling the atmosphere with yeast means that you no longer need to add it to bread.

upgrade7= Name-brand Bread Company
descup7= Buy out the compatition.

upgrade8= Bread Teleporters
descup8= Teleporting bread where it needs to go reduces transport cost.

upgrade9= Martian Bread Colonies
descup9= Move bread production to mars. Suckers will pay alot more for bread from mars.

upgrade10= Garlic
descup10= Adding this to your bread increaces its value exponentially.


;####################
;# Message settings #
;####################
[message]

; Enter variables inside brackets like this ${variable}
; The variables you can use are:
;   minutes     (How many minutes its been since the start time)
;   seconds     (How many seconds its been since the start time)
;   pps         (Product created per second)
;   value       (Finished product worth per item)
;   funds       (Current money in their stash)
;   timebonus   (Percentage bonus awarded when product is sold)
;   income      (Amount of money gained once sold)

; All of discords markdown works in these
; Insert \n to signify a newline

; To signify a newline use ${n}

; The following lines are what are shown when the user executes !stop
; They are shown in order

finishstatus= You raised your dough for ${minutes} minutes!
commentstatus= Thats quite the raise. Well done my man.

; One of these 2 lines will show depending on if the user spent enough time to produce a quality product or not
finishtimebad= Unfortunately you didnt raise long enough! This decreased the value of your dough by ${timebonus}%
finishtimegood= Raising for that long increased the value of your dough by ${timebonus}%

; Comment sent to user based on bad or good product
commentbad= Eh, maybe one day you will get it. *Maybe*.
commentgood= Well done! Your bread appreciates you.

finishformula= With you currently raising enough dough for ${pps} loafs per second, and your completed bread selling at $${value} per loaf, you just gained $${income}!
commentformula= What a profit, for a baker.

; Example outputted message:

; You raised your dough for 13.52 minutes!
; Unfortunately you didnt raise long enough! This decreased the value of your dough by 32.42%
; With you currently raising enough dough for 1.00 loafs per second,
; and your completed bread selling at $1.00 per loaf,
; you just gained $548.01!


; This is displayed when user executes !status
; !!! You can not use income and timebonus variables here !!!
statustitle= __BrEaD StAtUs__
checkstatus= Your bread has been baking for **${minutes}** minutes\nYou make **${pps}** loafs of bread per second\nEach loaf is worth **${value}**\nAnd you have **$${funds}** in the bank

; Example outputted message:

; Your bread has been baking for 0.07 minutes
; You make 1.00 loafs of bread per second
; Each loaf is worth 1.00
; And you have $100.00 in the bank

; Displayed when a user purchases an item
purchase= Purchased successfully! You have $${funds} remaining.

; Displayed when a user tries to purchases an item, but doesnt have enough money
failpurchase= Not enough money! You only have $${funds}.
